<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fade.mapper.UserDao">
	<!-- 通过id获取用户 -->
	<select id="getUserById" parameterType="Integer" resultType="User">
		select user_id, telephone, fade_name, nickname, password,
		 sex,head_image_url,register_time, summary, wechat_id, weibo_id,
		 qq_id,concern_num, fans_num, fade_num, area,wallpaper_url, school, uuid
		from user
		<where>
		user_id=#{user_id}
		</where>
	</select>
	
	<!-- 插入新用户，返回1或0（成功或者失败）-->
	<insert id="addUser" parameterType="User">
	   <selectKey keyColumn="user_id" keyProperty="user_id" order="AFTER" resultType="Integer">
	      SELECT LAST_INSERT_ID()
	   </selectKey>
	   insert into user values(null,#{telephone},#{fade_name},#{nickname},#{password},
	                           #{sex},#{head_image_url},#{register_time},#{summary},
	                           #{wechat_id},#{weibo_id},#{qq_id},0,
	                           0,0,#{area},#{wallpaper_url},
	                           #{school}, #{uuid})
	</insert>
	
	<!-- 编辑用户昵称 -->
	<update id="updateNickname" parameterType="User">
	   update user set nickname=#{nickname} where user_id=#{user_id}
	</update>
	
	<!-- 保存或更新用户头像 -->
	<update id="updateHeadUrl">
	   update user set head_image_url=#{head_image_url} where user_id=#{user_id}
	</update>
	
	<!-- 获取关注的全部用户 -->
	<select id="getStarUser" parameterType="int" resultType="User">
	   select user_id, nickname from user a,relation b
	    where b.user_star = a.user_id and b.user_fans = #{user_id}
	</select>
	
	<!-- 查询手机号是否已被注册 -->
	<select id="getUserByTel" parameterType="String" resultType="User">
	   select user_id from user where telephone=#{telephone}
	</select>
	
	<!-- 通过手机和密码登录 -->
	<select id="getUserByTelPwd" parameterType="User" resultType="User">
	   select * from user where telephone=#{telephone} and password=#{password}
	</select>
	
	<!-- 通过fade账号和密码登录 -->
	<select id="getUserByFadePwd" parameterType="User" resultType="User">
	   select * from user where fade_name=#{fade_name} and password=#{password}
	</select>
	
	<!-- 查询openid是否被注册 -->
	<select id="getUserByOpenId" resultType="User">
	   select user_id from user
	   <where>
	      <if test="type == 0">
	          wechat_id=#{wechat_id}
	      </if>
	      <if test="type == 1">
	          wechat_id=#{weibo_id}
	      </if>	
	      <if test="type == 2">
	          wechat_id=#{qq_id}
	      </if>		            
	   </where>
	</select>
	
	<!-- 根据fade_name查询用户 -->
	<select id="getUserByFadeName" parameterType="String" resultType="User">
	    select * from user where fade_name=#{fade_name}
	</select>
	
	<!-- 编辑用户信息(部分) -->
	<update id="updateUserById" parameterType="User">
	    update user set
	      nickname=#{nickname},area=#{area},school=#{school},sex=#{sex},summary=#{summary},head_image_url=#{head_image_url}
	        where user_id=#{user_id}
	</update>
	
	<!-- 根据电话获取用户的盐 -->
	<select id="getSaltByTel" parameterType="String" resultType="String">
	    select b.salt from user a, user_salt b
	      where a.telephone=#{telephone}
	            and a.user_id=b.user_id
	</select>
	
	<!-- 根据fade_name获取用户的盐 -->
	<select id="getSaltByFadeName" parameterType="String" resultType="String">
	    select b.salt from user a, user_salt b
	      where a.fade_name=#{fade_name}
	            and a.user_id=b.user_id
	</select>
	
	<!-- 新增盐 -->
	<insert id="addSalt">
	   insert into user_salt values(null,#{user_id},#{salt});
	</insert>
	
	<!-- 查询所有粉丝 -->
	<select id="getAllFansId" parameterType="Integer" resultType="Integer">
	   select a.user_id from user a, relation b where 
	      a.user_id=b.user_fans and b.user_star=#{user_id} 
	</select>
	
	<!-- 关注某人 -->
	<insert id="addConcern">
	   insert into relation values(null,#{star_id},#{fans_id},null)
	</insert>

	<!-- 取消关注某人 -->
	<insert id="cancelConcern">
	   delete from relation where user_star=#{star_id} and user_fans=#{fans_id}
	</insert>
	
	<!-- 用于详情页，得到部分用户信息 -->
	<select id="getSimpleUserById" parameterType="Integer" resultType="User">
	   select user_id, fade_name, nickname,head_image_url, sex, register_time,
	   summary,concern_num,fans_num,fade_num,area,wallpaper_url,school
	   from user
	   where user_id=#{user_id}
	</select>
	
	<!--获取是否关注某人-->
	<select id="getRelation" resultType="Integer">
	   select relation_id from relation
	   where user_star=#{user_id} and user_fans=#{my_id}
	</select>
	
	<!-- 获取头像url -->
	<select id="getHeadImageUrl"  parameterType="User"  resultType="String">
	   select head_image_url from user  
	   <if test="telephone != null">
	       where telephone=#{telephone}
	   </if>
	   <if test="fade_name != null">
	       where fade_name=#{fade_name}
	   </if>
	   <if test="wechat_id != null">
	       where wechat_id=#{wechat_id}
	   </if>	   
	</select>	
	
	<!-- 新增消息数量 -->
	<select id="getAddMessage" parameterType="Integer" resultType="AddMessage">
	   select user_id, addContributeNum,addFansNum,addCommentNum 
	   from addmessage 
	   where user_id=#{user_id}
	</select>
	
	<!-- 新建到新增消息队列里“注册” -->
	<insert id="addMessage" parameterType="Integer">
	   insert into addmessage values(null,#{user_id},0,null,0,null,0,null);
	</insert>
	
	<!-- 更新通知点 -->
	<update id="updateContributePoint">
	    update addmessage set addContributePoint=#{addContributePoint} 
	    where user_id=#{user_id}
	</update>
	
	<!--通知相关：  通知数量改为0 -->
	<update id="updateContributeZero">
	    update addmessage set addContributeNum=0
	    where user_id=#{user_id}
	</update>	
	<!-- 通知相关： 获取十个新增粉丝 -->
	<select id="getAddFans" resultType="User">
	    select a.user_id, a.nickname, a.head_image_url, b.relation_time, b.relation_id
	    from user a, relation b where 
	   <if test="start != 0">
	      b.relation_id&lt;#{start} and 
	   </if> 
	   	   b.relation_time >=(
	      select addFansPoint from addmessage where user_id=#{user_id}
	   )
	   and b.user_fans=a.user_id
	   and b.user_star=#{user_id}
	   order by relation_time desc
	   limit 0,10
	</select>
	
	<!-- 通知相关： 粉丝队列通知数量改为0,更新通知点 -->
	<update id="updateAddFans">
	    update addmessage set addFansNum=0 and addFansPoint=#{addFansPoint} 
	    where user_id=#{user_id}
	</update>	
	
	<!-- fade数量加一 -->
	<update id="updateFadeNumPlus" parameterType="Integer">
	   update user set fade_num=fade_num+1 where user_id=#{user_id}
	</update>
	
	<!-- 关注数量+1 -->
	<update id="updateConcernNumPlus" parameterType="Integer">
	   update user set concern_num=concern_num+1 where user_id=#{fans_id}
	</update>
	
	<!-- 粉丝数量加一 -->
	<update id="updateFansNumPlus" parameterType="Integer">
	   update user set fans_num=fans_num+1 where user_id=#{star_id}
	</update>
	
	<!--通知相关： 原主人的通知数量+1 -->
	<update id="updateContributePlus" parameterType="Integer">
	   update addmessage set addContributeNum=addContributeNum+1 where user_id=#{user_id}
	</update>
</mapper>